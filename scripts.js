const products = [
  {
    name: "–Ü–≥—Ä–æ–≤–∏–π –ü–ö –ü–æ—Ç—É–∂–Ω–∏–π",
    price: 30000,
    img: "images/pc1.jpg",
    description: "Intel i9, RTX 4080, 32GB RAM, SSD 1TB",
    category: "–ü–ö"
  },
  {
    name: "–Ü–≥—Ä–æ–≤–∏–π –ü–ö –°–µ—Ä–µ–¥–Ω—ñ–π",
    price: 20000,
    img: "images/pc2.jpg",
    description: "Intel i5, RTX 3060, 16GB RAM",
    category: "–ü–ö"
  },
  {
    name: "–ü–ö –¥–ª—è –æ—Ñ—ñ—Å—É",
    price: 10000,
    img: "images/pc3.jpg",
    description: "AMD Ryzen 3, Vega Graphics, 8GB RAM",
    category: "–ü–ö"
  },
  {
    name: "–°—Ç—ñ–ª –≥–µ–π–º–µ—Ä—Å—å–∫–∏–π",
    price: 4000,
    img: "images/table1.jpg",
    description: "–ó—Ä—É—á–Ω–∏–π –≥–µ–π–º–µ—Ä—Å—å–∫–∏–π —Å—Ç—ñ–ª –∑ LED-–ø—ñ–¥—Å–≤—ñ—Ç–∫–æ—é.",
    category: "–°—Ç–æ–ª–∏"
  },
  {
    name: "–ù–∞–≤—É—à–Ω–∏–∫–∏ HyperX",
    price: 1200,
    img: "images/headphones1.jpg",
    description: "–Ø–∫—ñ—Å–Ω–∏–π –∑–≤—É–∫ —ñ –º—ñ–∫—Ä–æ—Ñ–æ–Ω –¥–ª—è —ñ–≥–æ—Ä.",
    category: "–ù–∞—É—à–Ω–∏–∫–∏"
  },
  {
    name: "–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ Logitech",
    price: 1000,
    img: "images/keyboard1.jpg",
    description: "–ú–µ—Ö–∞–Ω—ñ—á–Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑ –ø—ñ–¥—Å–≤—ñ—Ç–∫–æ—é.",
    category: "–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∏"
  },
  {
    name: "–ú–∏—à–∞ Razer",
    price: 800,
    img: "images/mouse1.jpg",
    description: "–®–≤–∏–¥–∫–∞ —Ç–∞ —Ç–æ—á–Ω–∞ –º–∏—à–∞ –¥–ª—è –≥–µ–π–º–µ—Ä—ñ–≤.",
    category: "–ú–∏—à—ñ"
  },
  {
    name: "Sony PlayStation 5",
    price: 20000,
    img: "images/console1.jpg",
    description: "–ö–æ–Ω—Å–æ–ª—å –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª—ñ–Ω–Ω—è.",
    category: "–ü–ö"
  },
  {
    name: "–ú–æ–Ω—ñ—Ç–æ—Ä MSI 27\"",
    price: 7000,
    img: "images/monitor1.jpg",
    description: "Full HD 144Hz —ñ–≥—Ä–æ–≤–∏–π –º–æ–Ω—ñ—Ç–æ—Ä.",
    category: "–ü–ö"
  }
];

const apiKey = 'a89c06ea2c3f3f57257fdcdbf3850b4c';

document.getElementById("delivery-location").addEventListener("change", function () {
  const city = this.value;
  const branchSelect = document.getElementById("nova-poshta-branches");
  branchSelect.innerHTML = '<option value="">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–¥—ñ–ª–µ–Ω—å...</option>';

  if (!city) return;


  fetch("https://api.novaposhta.ua/v2.0/json/", {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      apiKey: apiKey,
      modelName: "Address",
      calledMethod: "getCities",
      methodProperties: {
        FindByString: city
      }
    })
  })
  .then(response => response.json())
  .then(data => {
    const cityData = data.data.find(item => item.Description === city);
    if (!cityData) {
      branchSelect.innerHTML = '<option value="">–ú—ñ—Å—Ç–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</option>';
      return;
    }

    const cityRef = cityData.Ref;


    fetch("https://api.novaposhta.ua/v2.0/json/", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        apiKey: apiKey,
        modelName: "AddressGeneral",
        calledMethod: "getWarehouses",
        methodProperties: {
          CityRef: cityRef
        }
      })
    })
    .then(response => response.json())
    .then(data => {
      branchSelect.innerHTML = '<option value="">–û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏</option>';
      data.data.forEach(branch => {
        const option = document.createElement("option");
        option.value = branch.Description;
        option.textContent = branch.Description;
        branchSelect.appendChild(option);
      });
    })
    .catch(error => {
      console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –≤—ñ–¥–¥—ñ–ª–µ–Ω—å:", error);
      branchSelect.innerHTML = '<option value="">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–¥—ñ–ª–µ–Ω—å</option>';
    });
  })
  .catch(error => {
    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –º—ñ—Å—Ç–∞:", error);
    branchSelect.innerHTML = '<option value="">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º—ñ—Å—Ç–∞</option>';
  });
});


const cart = [];

function displayProducts() {
  const productsContainer = document.getElementById('products');
  productsContainer.innerHTML = '';

  products.forEach(product => {
    const productCard = document.createElement('div');
    productCard.className = 'product-card';
    productCard.innerHTML = `
      <img src="${product.img}" alt="${product.name}">
      <h3>${product.name}</h3>
      <p>${product.description}</p>
      <p>${product.price} ‚Ç¥</p>
      <button onclick='addToCart(${JSON.stringify(product)})'>–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫</button>
    `;
    productsContainer.appendChild(productCard);
  });
}

document.getElementById('search').addEventListener('input', function () {
  const searchTerm = this.value.toLowerCase();

  const filteredProducts = products.filter(product =>
    product.name.toLowerCase().includes(searchTerm) ||
    product.description.toLowerCase().includes(searchTerm)
  );

  displayFilteredProducts(filteredProducts);
});

function displayFilteredProducts(filtered) {
  const productsContainer = document.getElementById('products');
  productsContainer.innerHTML = '';

  filtered.forEach(product => {
    const productCard = document.createElement('div');
    productCard.classList.add('product-card');
    productCard.innerHTML = `
      <img src="${product.img}" alt="${product.name}">
      <h3>${product.name}</h3>
      <p>${product.description}</p>
      <p>${product.price} ‚Ç¥</p>
      <button onclick="addToCart(${JSON.stringify(product)})">–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫</button>
    `;
    productsContainer.appendChild(productCard);
  });
}

function addToCart(product) {
  cart.push(product);
  updateCart();
}

function updateCart() {
  const cartItems = document.getElementById('cart-items');
  cartItems.innerHTML = '';
  let totalPrice = 0;

  cart.forEach((product, index) => {
    const li = document.createElement('li');
    li.innerHTML = `
      ${product.name} - ${product.price} ‚Ç¥
      <button onclick="removeFromCart(${index})">üóë –í–∏–¥–∞–ª–∏—Ç–∏</button>
    `;
    cartItems.appendChild(li);
    totalPrice += product.price;
  });

  document.getElementById('total-price').textContent = `–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${totalPrice} ‚Ç¥`;
}

function removeFromCart(index) {
  cart.splice(index, 1); // –í–∏–¥–∞–ª—è—î 1 –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó index
  updateCart(); // –û–Ω–æ–≤–ª—é—î –≤–∏–≤—ñ–¥
}

function checkout() {
  alert('–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ! –ú–∏ –∑ –≤–∞–º–∏ –∑–≤‚Äô—è–∂–µ–º–æ—Å—å.');
}

const categoryButton = document.getElementById('category-button');
const dropdown = document.querySelector('.dropdown');

categoryButton.addEventListener('click', () => {
  dropdown.classList.toggle('show');
});


window.addEventListener('click', (e) => {
  if (!dropdown.contains(e.target)) {
    dropdown.classList.remove('show');
  }
});


function addToCartConfigurator() {
  const config = {
    name: "–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ü–ö",
    price: 25000,
    description: "–ó—ñ–±—Ä–∞–Ω–æ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ç–æ—Ä",
    img: "images/configurator.jpg"
  };
  cart.push(config);
  updateCart();
}

document.getElementById('filter').addEventListener('change', function () {
  const selected = this.value;
  document.getElementById('configurator').classList.toggle('hidden', selected !== '–ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ç–æ—Ä');
  displayProducts(selected);
});

const novaPoshtaData = {
  "–ö–∏—ó–≤": ["–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ1", "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ2", "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ3"],
  "–õ—å–≤—ñ–≤": ["–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ1", "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ4", "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ5"],
  "–û–¥–µ—Å–∞": ["–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ2", "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ3", "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ6"],
  "–•–∞—Ä–∫—ñ–≤": ["–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ1", "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ7", "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ8"],
  "–ú–∏–∫–æ–ª–∞—ó–≤": ["–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ2", "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ9", "–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ10"]
};

document.getElementById("delivery-location").addEventListener("change", function () {
  const city = this.value;
  const branchSelect = document.getElementById("nova-poshta-branches");

  branchSelect.innerHTML = '<option value="">–û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏</option>';

  if (novaPoshtaData[city]) {
    novaPoshtaData[city].forEach(branch => {
      const option = document.createElement("option");
      option.value = branch;
      option.textContent = branch;
      branchSelect.appendChild(option);
    });
  }
});


function displayProducts(filter = "–í—Å—ñ") {
  const productsContainer = document.getElementById('products');
  productsContainer.innerHTML = '';

  products
    .filter(p => filter === "–í—Å—ñ" || p.category === filter)
    .forEach(product => {
      const productCard = document.createElement('div');
      productCard.className = 'product-card';
      productCard.innerHTML = `
        <img src="${product.img}" alt="${product.name}">
        <h3>${product.name}</h3>
        <p>${product.description}</p>
        <p>${product.price} ‚Ç¥</p>
        <button onclick='addToCart(${JSON.stringify(product)})'>–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫</button>
      `;
      productsContainer.appendChild(productCard);
    });
}

displayProducts();
